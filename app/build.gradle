plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'

    id 'dagger.hilt.android.plugin'
}

android {
    namespace application_id
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId application_id
        minSdk min_sdk_version
        targetSdk compile_sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = java_version
        freeCompilerArgs += [
                "-opt-in=kotlin.RequiresOptIn",
                "-opt-in=kotlin.OptIn"
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation(project(path: ":domain"))

    //Reduce dependency tree depth by removing :di dependency (which aggregated both dependencies)
    //Any change to :backend or :storage modules would cause a cache miss for :di module requiring
    //a rebuild of :di build cache (which I suspect might recompile both :storage and :backend)
    implementation project(path: ':backend')
    implementation project(path: ':storage')

    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"

    //Hilt
    kapt "com.google.dagger:hilt-compiler:${hilt_version}"
    implementation "com.google.dagger:hilt-android:${hilt_version}"


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'

}
//If used correctly (and dependencies structured correctly) we could avoid dependency on a base module
//thus reducing dependency depth and potentially better incremental build times.
hilt {
    enableAggregatingTask = true
}

kapt {
    correctErrorTypes true
}